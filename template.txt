/////////////
Basic code
////////////
#include<bits/stdc++.h>
using namespace std;
int main()
{
int t;
cin>>t;
while(t-->0)
{
long long n;
}
return 0;
}
//////////////////////


#include<bits/stdc++.h>
using namespace std;
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define set_bits __builtin_popcountll
#define all(x) (x).begin(), (x).end()
typedef long long ll;
typedef long double lld;
#ifndef ONLINE_JUDGE
#define de(x) cerr << #x <<" "; pr(x); cerr << endl;
#else
#define de(x)
#endif

void pr(ll t) {cerr << t;}
void pr(int t) {cerr << t;}
void pr(string t) {cerr << t;}
void pr(char t) {cerr << t;}
void pr(lld t) {cerr << t;}
void pr(double t) {cerr << t;}

template <class T, class V> void pr(pair <T, V> p);
template <class T> void pr(vector <T> v);
template <class T> void pr(set <T> v);
template <class T, class V> void pr(map <T, V> v);
template <class T> void pr(multiset <T> v);

template <class T, class V> void pr(pair <T, V> p) {cerr << "{"; pr(p.ff); cerr << ","; pr(p.ss); cerr << "}";}
template <class T> void pr(vector <T> v) {cerr << "[ "; for (T i : v) {pr(i); cerr << " ";} cerr << "]";}
template <class T> void pr(set <T> v) {cerr << "[ "; for (T i : v) {pr(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {pr(i); cerr << " ";} cerr << "]";}
template <class T, class V> void pr(map <T, V> v) {cerr << "[ "; for (auto i : v) {pr(i); cerr << " ";} cerr << "]";}

//The following code was written by Codeslayer7

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("error.txt", "w", stderr);
#endif
	vector<ll>a = {1, 2, 3, 4, 5, 6, 7, 8, 9};
	de(a);

	return 0;
}


/////////////////////////////////////////////////////////////////
Template for code
//////////////////////
#include<bits/stdc++.h>
#define ll long long
#define ff first
#define ss second
#define pb push_back
#define INF 1e8
#define FOREACH(it, l) for (auto it = l.begin(); it != l.end(); it++)
using namespace std;
#define MAX_CHAR 256
ll M = 1000000007;
int main()
{
int t;
cin>>t;
while(t-->0)
{
ll n;
cin>>n;
ll a[n];
for(int i=0;i<n;i++)
cin>>a[i];
sort(a,a+n);
}
return 0;
}

/////////////////////////
FREOPEN AND FASTIO (INCLUDE IN THE PROGRAM):
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

------

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif


/////////////////////////
Base for graphs:
#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define INF 1e8
#define FOREACH(it, l) for (auto it = l.begin(); it != l.end(); it++)
#define MAX_CHAR 256
using namespace std;
int vis[100001];
const ll mxn=1e6;
//vector<int>a[mxn];
int main()
{
    int t;
    cin>>t;
    while(t-->0)
    {
    int n,k;
    cin>>n>>k;
    int p=n-1;
       vector<int>r(n,0);
    vector<int>level(n,0);
    queue<int>q;
    vector<int>a[n];
    while(p-->0)
    {
        int u,v;
        cin>>u>>v;
        --u;
        --v;

        /////////////////
        DIJKSTRA
        //////////////////////
        const int INF = 1000000000;
vector<vector<pair<int, int>>> adj;

void dijkstra(int s, vector<int> & d, vector<int> & p) {
    int n = adj.size();
    d.assign(n, INF);
    p.assign(n, -1);

    d[s] = 0;
    using pii = pair<int, int>;
    priority_queue<pii, vector<pii>, greater<pii>> q;
    q.push({0, s});
    while (!q.empty()) {
        int v = q.top().second;
        int d_v = q.top().first;
        q.pop();
        if (d_v != d[v])
            continue;

        for (auto edge : adj[v]) {
            int to = edge.first;
            int len = edge.second;

            if (d[v] + len < d[to]) {
                d[to] = d[v] + len;
                p[to] = v;
                q.push({d[to], to});
            }
        }
    }
}


        /////////////////////////////////////
            More imp function templates
            --------------------
bool uniqueChar(string str)
{
    sort(str.begin(), str.end());
@@ -135,6 +17,19 @@ bool isPerfectSquare(double x)
    }
    return false;
}
ll powerm(ll a,ll b,ll m) { //m-> mod
    if(b==0) {
        return 1;
    }
    ll res=powerm(a,b/2,m);
    if(b%2) {
        return ((res*res)%m*(a%m))%m;
    }
    return (res*res)%m;
}

//INVERSE -> a^(m-2) ...m -> prime

int power(ll a,ll b) {
    if(b==0) {
        return 1;
    }
    ll res=power(a,b/2);
    if(b%2==0) {
        return res*res;
    }
    return res*res*a;
}
ll ncr(ll n,ll r)
{
ll ans=1,y=1,x=n-r+1;
for(int i=r+1;i<=n;i++)
{
	ans*=i;
	if(y!=x)
{
	ans/=y;
	y++;
}
}
return ans;
}
